use crate::math::{vec2::*, vec3::*};
use crate::src::model::*;

pub fn load_cube() -> Mesh {
    let mut mesh = Mesh::DEFAULT;
    //front face
    for v in &DATA {
        mesh.vertices.push(Vertex {
            pos: vec3(v[0], v[1], v[2]),
            norm: vec3(v[3], v[4], v[5]),
            tex: vec2(v[6], v[7]),
        })
    }

    mesh.indices = vec![
        0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 18,
        19, 19, 17, 16, 20, 22, 23, 23, 21, 20,
    ];

    mesh
}

const DATA: [[f32; 8]; 24] = [
    [1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0],
    [-1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0],
    [-1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0],
    [1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0],
    //
    [1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0],
    [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0],
    [-1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0],
    [1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 1.0],
    //
    [-1.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0],
    [-1.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0],
    [-1.0, 1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 1.0],
    [-1.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0],
    // right face
    [1.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0],
    [1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0],
    [1.0, 1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 1.0],
    [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0],
    // top face
    [-1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0],
    [1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0],
    [-1.0, 1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0],
    [1.0, 1.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0],
    // bottom face
    [-1.0, -1.0, 1.0, 0.0, -1.0, 0.0, 0.0, 0.0],
    [1.0, -1.0, 1.0, 0.0, -1.0, 0.0, 1.0, 0.0],
    [-1.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 1.0],
    [1.0, -1.0, -1.0, 0.0, -1.0, 0.0, 1.0, 1.0],
];
